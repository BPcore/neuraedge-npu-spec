/* Generated by Yosys 0.55+112 (git sha1 bf9aaac0f, clang++ 18.1.3 -fPIC -O3) */

(* dynports =  1  *)
(* top =  1  *)
(* src = "../../rtl/pe/neuraedge_pe.v:2.1-52.10" *)
module neuraedge_pe(clk, rst_n, pe_enable, mac_clear, accumulate_en, data_in, weight_in, data_valid, data_out, weight_out, data_valid_out, accum_out, accum_valid);
  wire _0000_;
  wire _0001_;
  wire _0002_;
  wire _0003_;
  wire _0004_;
  wire _0005_;
  wire _0006_;
  wire _0007_;
  wire _0008_;
  wire _0009_;
  wire _0010_;
  wire _0011_;
  wire _0012_;
  wire _0013_;
  wire _0014_;
  wire _0015_;
  wire _0016_;
  wire _0017_;
  wire _0018_;
  wire _0019_;
  wire _0020_;
  wire _0021_;
  wire _0022_;
  wire _0023_;
  wire _0024_;
  wire _0025_;
  wire _0026_;
  wire _0027_;
  wire _0028_;
  wire _0029_;
  wire _0030_;
  wire _0031_;
  wire _0032_;
  wire _0033_;
  wire _0034_;
  wire _0035_;
  wire _0036_;
  wire _0037_;
  wire _0038_;
  wire _0039_;
  wire _0040_;
  wire _0041_;
  wire _0042_;
  wire _0043_;
  wire _0044_;
  wire _0045_;
  wire _0046_;
  wire _0047_;
  wire _0048_;
  wire _0049_;
  wire _0050_;
  wire _0051_;
  wire _0052_;
  wire _0053_;
  wire _0054_;
  wire _0055_;
  wire _0056_;
  wire _0057_;
  wire _0058_;
  wire _0059_;
  wire _0060_;
  wire _0061_;
  wire _0062_;
  wire _0063_;
  wire _0064_;
  wire _0065_;
  wire _0066_;
  wire _0067_;
  wire _0068_;
  wire _0069_;
  wire _0070_;
  wire _0071_;
  wire _0072_;
  wire _0073_;
  wire _0074_;
  wire _0075_;
  wire _0076_;
  wire _0077_;
  wire _0078_;
  wire _0079_;
  wire _0080_;
  wire _0081_;
  wire _0082_;
  wire _0083_;
  wire _0084_;
  wire _0085_;
  wire _0086_;
  wire _0087_;
  wire _0088_;
  wire _0089_;
  wire _0090_;
  wire _0091_;
  wire _0092_;
  wire _0093_;
  wire _0094_;
  wire _0095_;
  wire _0096_;
  wire _0097_;
  wire _0098_;
  wire _0099_;
  wire _0100_;
  wire _0101_;
  wire _0102_;
  wire _0103_;
  wire _0104_;
  wire _0105_;
  wire _0106_;
  wire _0107_;
  wire _0108_;
  wire _0109_;
  wire _0110_;
  wire _0111_;
  wire _0112_;
  wire _0113_;
  wire _0114_;
  wire _0115_;
  wire _0116_;
  wire _0117_;
  wire _0118_;
  wire _0119_;
  wire _0120_;
  wire _0121_;
  wire _0122_;
  wire _0123_;
  wire _0124_;
  wire _0125_;
  wire _0126_;
  wire _0127_;
  wire _0128_;
  wire _0129_;
  wire _0130_;
  wire _0131_;
  wire _0132_;
  wire _0133_;
  wire _0134_;
  wire _0135_;
  wire _0136_;
  wire _0137_;
  wire _0138_;
  wire _0139_;
  wire _0140_;
  wire _0141_;
  wire _0142_;
  wire _0143_;
  wire _0144_;
  wire _0145_;
  wire _0146_;
  wire _0147_;
  wire _0148_;
  wire _0149_;
  wire _0150_;
  wire _0151_;
  wire _0152_;
  wire _0153_;
  wire _0154_;
  wire _0155_;
  wire _0156_;
  wire _0157_;
  wire _0158_;
  wire _0159_;
  wire _0160_;
  wire _0161_;
  wire _0162_;
  wire _0163_;
  wire _0164_;
  wire _0165_;
  wire _0166_;
  wire _0167_;
  wire _0168_;
  wire _0169_;
  wire _0170_;
  wire _0171_;
  wire _0172_;
  wire _0173_;
  wire _0174_;
  wire _0175_;
  wire _0176_;
  wire _0177_;
  wire _0178_;
  wire _0179_;
  wire _0180_;
  wire _0181_;
  wire _0182_;
  wire _0183_;
  wire _0184_;
  wire _0185_;
  wire _0186_;
  wire _0187_;
  wire _0188_;
  wire _0189_;
  wire _0190_;
  wire _0191_;
  wire _0192_;
  wire _0193_;
  wire _0194_;
  wire _0195_;
  wire _0196_;
  wire _0197_;
  wire _0198_;
  wire _0199_;
  wire _0200_;
  wire _0201_;
  wire _0202_;
  wire _0203_;
  wire _0204_;
  wire _0205_;
  wire _0206_;
  wire _0207_;
  wire _0208_;
  wire _0209_;
  wire _0210_;
  wire _0211_;
  wire _0212_;
  wire _0213_;
  wire _0214_;
  wire _0215_;
  wire _0216_;
  wire _0217_;
  wire _0218_;
  wire _0219_;
  wire _0220_;
  wire _0221_;
  wire _0222_;
  wire _0223_;
  wire _0224_;
  wire _0225_;
  wire _0226_;
  wire _0227_;
  wire _0228_;
  wire _0229_;
  wire _0230_;
  wire _0231_;
  wire _0232_;
  wire _0233_;
  wire _0234_;
  wire _0235_;
  wire _0236_;
  wire _0237_;
  wire _0238_;
  wire _0239_;
  wire _0240_;
  wire _0241_;
  wire _0242_;
  wire _0243_;
  wire _0244_;
  wire _0245_;
  wire _0246_;
  wire _0247_;
  wire _0248_;
  wire _0249_;
  wire _0250_;
  wire _0251_;
  wire _0252_;
  wire _0253_;
  wire _0254_;
  wire _0255_;
  wire _0256_;
  wire _0257_;
  wire _0258_;
  wire _0259_;
  wire _0260_;
  wire _0261_;
  wire _0262_;
  wire _0263_;
  wire _0264_;
  wire _0265_;
  wire _0266_;
  wire _0267_;
  wire _0268_;
  wire _0269_;
  wire _0270_;
  wire _0271_;
  wire _0272_;
  wire _0273_;
  wire _0274_;
  wire _0275_;
  wire _0276_;
  wire _0277_;
  wire _0278_;
  wire _0279_;
  wire _0280_;
  wire _0281_;
  wire _0282_;
  wire _0283_;
  wire _0284_;
  wire _0285_;
  wire _0286_;
  wire _0287_;
  wire _0288_;
  wire _0289_;
  wire _0290_;
  wire _0291_;
  wire _0292_;
  wire _0293_;
  wire _0294_;
  wire _0295_;
  wire _0296_;
  wire _0297_;
  wire _0298_;
  wire _0299_;
  wire _0300_;
  wire _0301_;
  wire _0302_;
  wire _0303_;
  wire _0304_;
  wire _0305_;
  wire _0306_;
  wire _0307_;
  wire _0308_;
  wire _0309_;
  wire _0310_;
  wire _0311_;
  wire _0312_;
  wire _0313_;
  wire _0314_;
  wire _0315_;
  wire _0316_;
  wire _0317_;
  wire _0318_;
  wire _0319_;
  wire _0320_;
  wire _0321_;
  wire _0322_;
  wire _0323_;
  wire _0324_;
  wire _0325_;
  wire _0326_;
  wire _0327_;
  wire _0328_;
  wire _0329_;
  wire _0330_;
  wire _0331_;
  wire _0332_;
  wire _0333_;
  wire _0334_;
  wire _0335_;
  wire _0336_;
  wire _0337_;
  wire _0338_;
  wire _0339_;
  wire _0340_;
  wire _0341_;
  wire _0342_;
  wire _0343_;
  wire _0344_;
  wire _0345_;
  wire _0346_;
  wire _0347_;
  wire _0348_;
  wire _0349_;
  wire _0350_;
  wire _0351_;
  wire _0352_;
  wire _0353_;
  wire _0354_;
  wire _0355_;
  wire _0356_;
  wire _0357_;
  wire _0358_;
  wire _0359_;
  wire _0360_;
  wire _0361_;
  wire _0362_;
  wire _0363_;
  wire _0364_;
  wire _0365_;
  wire _0366_;
  wire _0367_;
  wire _0368_;
  wire _0369_;
  wire _0370_;
  wire _0371_;
  wire _0372_;
  wire _0373_;
  wire _0374_;
  wire _0375_;
  wire _0376_;
  wire _0377_;
  wire _0378_;
  wire _0379_;
  wire _0380_;
  wire _0381_;
  wire _0382_;
  wire _0383_;
  wire _0384_;
  wire _0385_;
  wire _0386_;
  wire _0387_;
  wire _0388_;
  wire _0389_;
  wire _0390_;
  wire _0391_;
  wire _0392_;
  wire _0393_;
  wire _0394_;
  wire _0395_;
  wire _0396_;
  wire _0397_;
  wire _0398_;
  wire _0399_;
  wire _0400_;
  wire _0401_;
  wire _0402_;
  wire _0403_;
  wire _0404_;
  wire _0405_;
  wire _0406_;
  wire _0407_;
  wire _0408_;
  wire _0409_;
  wire _0410_;
  wire _0411_;
  wire _0412_;
  wire _0413_;
  wire _0414_;
  wire _0415_;
  wire _0416_;
  wire _0417_;
  wire _0418_;
  wire _0419_;
  wire _0420_;
  wire _0421_;
  wire _0422_;
  wire _0423_;
  wire _0424_;
  wire _0425_;
  wire _0426_;
  wire _0427_;
  wire _0428_;
  wire _0429_;
  wire _0430_;
  wire _0431_;
  wire _0432_;
  wire _0433_;
  wire _0434_;
  wire _0435_;
  wire _0436_;
  wire _0437_;
  wire _0438_;
  wire _0439_;
  wire _0440_;
  wire _0441_;
  wire _0442_;
  wire _0443_;
  wire _0444_;
  wire _0445_;
  wire _0446_;
  wire _0447_;
  wire _0448_;
  wire _0449_;
  wire _0450_;
  wire _0451_;
  wire _0452_;
  wire _0453_;
  wire _0454_;
  wire _0455_;
  wire _0456_;
  wire _0457_;
  wire _0458_;
  wire _0459_;
  wire _0460_;
  wire _0461_;
  wire _0462_;
  wire _0463_;
  wire _0464_;
  wire _0465_;
  wire _0466_;
  wire _0467_;
  wire _0468_;
  wire _0469_;
  wire _0470_;
  wire _0471_;
  wire _0472_;
  wire _0473_;
  wire _0474_;
  wire _0475_;
  wire _0476_;
  wire _0477_;
  wire _0478_;
  wire _0479_;
  wire _0480_;
  wire _0481_;
  wire _0482_;
  wire _0483_;
  wire _0484_;
  wire _0485_;
  wire _0486_;
  wire _0487_;
  wire _0488_;
  wire _0489_;
  wire _0490_;
  wire _0491_;
  wire _0492_;
  wire _0493_;
  wire _0494_;
  wire _0495_;
  wire _0496_;
  wire _0497_;
  wire _0498_;
  wire _0499_;
  wire _0500_;
  wire _0501_;
  wire _0502_;
  wire _0503_;
  wire _0504_;
  wire _0505_;
  wire _0506_;
  wire _0507_;
  wire _0508_;
  wire _0509_;
  wire _0510_;
  wire _0511_;
  wire _0512_;
  wire _0513_;
  wire _0514_;
  wire _0515_;
  wire _0516_;
  wire _0517_;
  wire _0518_;
  wire _0519_;
  wire _0520_;
  wire _0521_;
  wire _0522_;
  wire _0523_;
  wire _0524_;
  wire _0525_;
  wire _0526_;
  wire _0527_;
  wire _0528_;
  wire _0529_;
  wire _0530_;
  wire _0531_;
  wire _0532_;
  wire _0533_;
  wire _0534_;
  wire _0535_;
  wire _0536_;
  wire _0537_;
  wire _0538_;
  wire _0539_;
  wire _0540_;
  wire _0541_;
  wire _0542_;
  wire _0543_;
  wire _0544_;
  wire _0545_;
  wire _0546_;
  wire _0547_;
  wire _0548_;
  wire _0549_;
  wire _0550_;
  wire _0551_;
  wire _0552_;
  wire _0553_;
  wire _0554_;
  wire _0555_;
  wire _0556_;
  wire _0557_;
  wire _0558_;
  wire _0559_;
  wire _0560_;
  wire _0561_;
  wire _0562_;
  wire _0563_;
  wire _0564_;
  wire _0565_;
  wire _0566_;
  wire _0567_;
  wire _0568_;
  wire _0569_;
  wire _0570_;
  wire _0571_;
  wire _0572_;
  wire _0573_;
  wire _0574_;
  wire _0575_;
  wire _0576_;
  wire _0577_;
  wire _0578_;
  wire _0579_;
  wire _0580_;
  wire _0581_;
  wire _0582_;
  wire _0583_;
  wire _0584_;
  wire _0585_;
  wire _0586_;
  wire _0587_;
  wire _0588_;
  wire _0589_;
  wire _0590_;
  wire _0591_;
  wire _0592_;
  wire _0593_;
  wire _0594_;
  wire _0595_;
  wire _0596_;
  wire _0597_;
  wire _0598_;
  wire _0599_;
  wire _0600_;
  wire _0601_;
  wire _0602_;
  wire _0603_;
  wire _0604_;
  wire _0605_;
  wire _0606_;
  wire _0607_;
  wire _0608_;
  wire _0609_;
  wire _0610_;
  wire _0611_;
  wire _0612_;
  wire _0613_;
  wire _0614_;
  wire _0615_;
  wire _0616_;
  (* src = "../../rtl/pe/neuraedge_pe.v:18.34-18.43" *)
  output [31:0] accum_out;
  wire [31:0] accum_out;
  (* src = "../../rtl/pe/neuraedge_pe.v:19.34-19.45" *)
  output accum_valid;
  wire accum_valid;
  (* src = "../../rtl/pe/neuraedge_pe.v:11.34-11.47" *)
  input accumulate_en;
  wire accumulate_en;
  (* src = "../../rtl/pe/neuraedge_pe.v:23.38-23.49" *)
  reg [31:0] accumulator;
  (* src = "../../rtl/pe/neuraedge_pe.v:7.34-7.37" *)
  input clk;
  wire clk;
  (* src = "../../rtl/pe/neuraedge_pe.v:12.34-12.41" *)
  input [7:0] data_in;
  wire [7:0] data_in;
  (* src = "../../rtl/pe/neuraedge_pe.v:15.34-15.42" *)
  output [7:0] data_out;
  wire [7:0] data_out;
  (* src = "../../rtl/pe/neuraedge_pe.v:14.34-14.44" *)
  input data_valid;
  wire data_valid;
  (* src = "../../rtl/pe/neuraedge_pe.v:17.34-17.48" *)
  output data_valid_out;
  wire data_valid_out;
  (* src = "../../rtl/pe/neuraedge_pe.v:10.34-10.43" *)
  input mac_clear;
  wire mac_clear;
  (* src = "../../rtl/pe/neuraedge_pe.v:23.51-23.61" *)
  wire [31:0] mac_result;
  (* src = "../../rtl/pe/neuraedge_pe.v:9.34-9.43" *)
  input pe_enable;
  wire pe_enable;
  (* src = "../../rtl/pe/neuraedge_pe.v:8.34-8.39" *)
  input rst_n;
  wire rst_n;
  (* src = "../../rtl/pe/neuraedge_pe.v:13.34-13.43" *)
  input [7:0] weight_in;
  wire [7:0] weight_in;
  (* src = "../../rtl/pe/neuraedge_pe.v:16.34-16.44" *)
  output [7:0] weight_out;
  wire [7:0] weight_out;
  assign _0605_ = accumulate_en & data_valid;
  assign _0000_ = _0605_ | mac_clear;
  assign _0606_ = ~mac_clear;
  assign _0607_ = ~accumulator[0];
  assign _0608_ = weight_in[0] & data_in[0];
  assign _0609_ = ~(data_valid & pe_enable);
  assign _0610_ = _0608_ & ~(_0609_);
  assign _0611_ = _0610_ ^ _0607_;
  assign mac_result[0] = _0606_ & ~(_0611_);
  assign _0612_ = ~accumulator[1];
  assign _0613_ = data_in[1] & weight_in[0];
  assign _0614_ = weight_in[1] & data_in[0];
  assign _0615_ = ~(_0614_ ^ _0613_);
  assign _0616_ = ~(_0615_ | _0609_);
  assign _0001_ = _0616_ ^ _0612_;
  assign _0002_ = _0610_ & ~(_0607_);
  assign _0003_ = _0002_ ^ _0001_;
  assign mac_result[1] = _0606_ & ~(_0003_);
  assign _0004_ = data_in[2] & weight_in[0];
  assign _0005_ = weight_in[1] & data_in[1];
  assign _0006_ = _0005_ ^ _0004_;
  assign _0007_ = weight_in[2] & data_in[0];
  assign _0008_ = ~_0007_;
  assign _0009_ = _0008_ ^ _0006_;
  assign _0010_ = _0614_ & _0613_;
  assign _0011_ = _0010_ ^ _0009_;
  assign _0012_ = ~(_0011_ | _0609_);
  assign _0013_ = ~(_0012_ ^ accumulator[2]);
  assign _0014_ = _0616_ & ~(_0612_);
  assign _0015_ = _0002_ & ~(_0001_);
  assign _0016_ = ~(_0015_ | _0014_);
  assign _0017_ = ~(_0016_ ^ _0013_);
  assign mac_result[2] = _0606_ & ~(_0017_);
  assign _0018_ = ~accumulator[3];
  assign _0019_ = ~(data_in[3] & weight_in[0]);
  assign _0020_ = ~(weight_in[1] & data_in[2]);
  assign _0021_ = _0020_ ^ _0019_;
  assign _0022_ = ~(weight_in[2] & data_in[1]);
  assign _0023_ = _0022_ ^ _0021_;
  assign _0024_ = ~(_0005_ & _0004_);
  assign _0025_ = _0006_ & ~(_0008_);
  assign _0026_ = _0024_ & ~(_0025_);
  assign _0027_ = _0026_ ^ _0023_;
  assign _0028_ = weight_in[3] & data_in[0];
  assign _0029_ = ~_0028_;
  assign _0030_ = _0029_ ^ _0027_;
  assign _0031_ = _0010_ & ~(_0009_);
  assign _0032_ = _0031_ ^ _0030_;
  assign _0033_ = ~(_0032_ | _0609_);
  assign _0034_ = _0033_ ^ _0018_;
  assign _0035_ = ~(_0012_ & accumulator[2]);
  assign _0036_ = ~(_0016_ | _0013_);
  assign _0037_ = _0036_ | ~(_0035_);
  assign _0038_ = _0037_ ^ _0034_;
  assign mac_result[3] = _0606_ & ~(_0038_);
  assign _0039_ = ~(data_in[4] & weight_in[0]);
  assign _0040_ = ~(weight_in[1] & data_in[3]);
  assign _0041_ = _0040_ ^ _0039_;
  assign _0042_ = ~(weight_in[2] & data_in[2]);
  assign _0043_ = _0042_ ^ _0041_;
  assign _0044_ = _0020_ | _0019_;
  assign _0045_ = _0021_ & ~(_0022_);
  assign _0046_ = _0044_ & ~(_0045_);
  assign _0047_ = _0046_ ^ _0043_;
  assign _0048_ = weight_in[3] & data_in[1];
  assign _0049_ = weight_in[4] & data_in[0];
  assign _0050_ = ~(_0049_ ^ _0048_);
  assign _0051_ = _0050_ ^ _0047_;
  assign _0052_ = _0026_ | _0023_;
  assign _0053_ = _0027_ & ~(_0029_);
  assign _0054_ = _0052_ & ~(_0053_);
  assign _0055_ = ~(_0054_ ^ _0051_);
  assign _0056_ = _0031_ & ~(_0030_);
  assign _0057_ = _0056_ ^ _0055_;
  assign _0058_ = ~(_0057_ | _0609_);
  assign _0059_ = ~(_0058_ ^ accumulator[4]);
  assign _0060_ = ~_0059_;
  assign _0061_ = _0033_ & ~(_0018_);
  assign _0062_ = ~(_0035_ | _0034_);
  assign _0063_ = ~(_0062_ | _0061_);
  assign _0064_ = ~(_0034_ | _0013_);
  assign _0065_ = _0064_ & ~(_0016_);
  assign _0066_ = _0063_ & ~(_0065_);
  assign _0067_ = _0066_ ^ _0060_;
  assign mac_result[4] = _0606_ & ~(_0067_);
  assign _0068_ = ~accumulator[5];
  assign _0069_ = ~(data_in[5] & weight_in[0]);
  assign _0070_ = ~(weight_in[1] & data_in[4]);
  assign _0071_ = _0070_ ^ _0069_;
  assign _0072_ = ~(weight_in[2] & data_in[3]);
  assign _0073_ = _0072_ ^ _0071_;
  assign _0074_ = _0040_ | _0039_;
  assign _0075_ = _0041_ & ~(_0042_);
  assign _0076_ = _0074_ & ~(_0075_);
  assign _0077_ = _0076_ ^ _0073_;
  assign _0078_ = weight_in[3] & data_in[2];
  assign _0079_ = weight_in[4] & data_in[1];
  assign _0080_ = _0079_ ^ _0078_;
  assign _0081_ = ~(weight_in[5] & data_in[0]);
  assign _0082_ = _0081_ ^ _0080_;
  assign _0083_ = _0082_ ^ _0077_;
  assign _0084_ = _0046_ | _0043_;
  assign _0085_ = _0047_ & ~(_0050_);
  assign _0086_ = _0084_ & ~(_0085_);
  assign _0087_ = _0086_ ^ _0083_;
  assign _0088_ = _0049_ & _0048_;
  assign _0089_ = _0088_ ^ _0087_;
  assign _0090_ = _0054_ | _0051_;
  assign _0091_ = ~_0090_;
  assign _0092_ = _0091_ ^ _0089_;
  assign _0093_ = _0056_ & ~(_0055_);
  assign _0094_ = ~_0093_;
  assign _0095_ = _0094_ ^ _0092_;
  assign _0096_ = ~(_0095_ | _0609_);
  assign _0097_ = _0096_ ^ _0068_;
  assign _0098_ = ~(_0058_ & accumulator[4]);
  assign _0099_ = _0060_ & ~(_0066_);
  assign _0100_ = _0099_ | ~(_0098_);
  assign _0101_ = _0100_ ^ _0097_;
  assign mac_result[5] = _0606_ & ~(_0101_);
  assign _0102_ = ~(data_in[6] & weight_in[0]);
  assign _0103_ = ~(weight_in[1] & data_in[5]);
  assign _0104_ = _0103_ ^ _0102_;
  assign _0105_ = ~(weight_in[2] & data_in[4]);
  assign _0106_ = _0105_ ^ _0104_;
  assign _0107_ = _0070_ | _0069_;
  assign _0108_ = _0071_ & ~(_0072_);
  assign _0109_ = _0107_ & ~(_0108_);
  assign _0110_ = _0109_ ^ _0106_;
  assign _0111_ = weight_in[3] & data_in[3];
  assign _0112_ = weight_in[4] & data_in[2];
  assign _0113_ = _0112_ ^ _0111_;
  assign _0114_ = ~(weight_in[5] & data_in[1]);
  assign _0115_ = _0114_ ^ _0113_;
  assign _0116_ = _0115_ ^ _0110_;
  assign _0117_ = _0076_ | _0073_;
  assign _0118_ = _0077_ & ~(_0082_);
  assign _0119_ = _0117_ & ~(_0118_);
  assign _0120_ = _0119_ ^ _0116_;
  assign _0121_ = ~(_0079_ & _0078_);
  assign _0122_ = _0080_ & ~(_0081_);
  assign _0123_ = _0121_ & ~(_0122_);
  assign _0124_ = weight_in[6] & data_in[0];
  assign _0125_ = _0124_ ^ _0123_;
  assign _0126_ = ~(_0125_ ^ _0120_);
  assign _0127_ = _0086_ | _0083_;
  assign _0128_ = _0088_ & _0087_;
  assign _0129_ = _0127_ & ~(_0128_);
  assign _0130_ = _0129_ ^ _0126_;
  assign _0131_ = ~(_0091_ & _0089_);
  assign _0132_ = ~(_0131_ ^ _0130_);
  assign _0133_ = _0092_ & ~(_0094_);
  assign _0134_ = _0133_ ^ _0132_;
  assign _0135_ = ~(_0134_ | _0609_);
  assign _0136_ = ~(_0135_ ^ accumulator[6]);
  assign _0137_ = ~_0136_;
  assign _0138_ = _0096_ & ~(_0068_);
  assign _0139_ = ~(_0098_ | _0097_);
  assign _0140_ = ~(_0139_ | _0138_);
  assign _0141_ = ~_0066_;
  assign _0142_ = _0097_ | _0059_;
  assign _0143_ = _0141_ & ~(_0142_);
  assign _0144_ = _0140_ & ~(_0143_);
  assign _0145_ = _0144_ ^ _0137_;
  assign mac_result[6] = _0606_ & ~(_0145_);
  assign _0146_ = ~(data_in[7] & weight_in[0]);
  assign _0147_ = ~(weight_in[1] & data_in[6]);
  assign _0148_ = _0147_ ^ _0146_;
  assign _0149_ = ~(weight_in[2] & data_in[5]);
  assign _0150_ = _0149_ ^ _0148_;
  assign _0151_ = _0103_ | _0102_;
  assign _0152_ = _0104_ & ~(_0105_);
  assign _0153_ = _0151_ & ~(_0152_);
  assign _0154_ = _0153_ ^ _0150_;
  assign _0155_ = weight_in[3] & data_in[4];
  assign _0156_ = weight_in[4] & data_in[3];
  assign _0157_ = _0156_ ^ _0155_;
  assign _0158_ = ~(weight_in[5] & data_in[2]);
  assign _0159_ = _0158_ ^ _0157_;
  assign _0160_ = _0159_ ^ _0154_;
  assign _0161_ = _0109_ | _0106_;
  assign _0162_ = _0110_ & ~(_0115_);
  assign _0163_ = _0161_ & ~(_0162_);
  assign _0164_ = _0163_ ^ _0160_;
  assign _0165_ = ~(_0112_ & _0111_);
  assign _0166_ = _0113_ & ~(_0114_);
  assign _0167_ = _0165_ & ~(_0166_);
  assign _0168_ = weight_in[6] & data_in[1];
  assign _0169_ = ~_0168_;
  assign _0170_ = _0169_ ^ _0167_;
  assign _0171_ = weight_in[7] & data_in[0];
  assign _0172_ = ~_0171_;
  assign _0173_ = _0172_ ^ _0170_;
  assign _0174_ = _0173_ ^ _0164_;
  assign _0175_ = _0119_ | _0116_;
  assign _0176_ = _0120_ & ~(_0125_);
  assign _0177_ = _0175_ & ~(_0176_);
  assign _0178_ = _0177_ ^ _0174_;
  assign _0179_ = _0124_ & ~(_0123_);
  assign _0180_ = _0179_ ^ _0178_;
  assign _0181_ = _0126_ & ~(_0129_);
  assign _0182_ = _0181_ ^ _0180_;
  assign _0183_ = _0131_ | _0130_;
  assign _0184_ = _0133_ & ~(_0132_);
  assign _0185_ = _0183_ & ~(_0184_);
  assign _0186_ = _0185_ ^ _0182_;
  assign _0187_ = ~(_0186_ | _0609_);
  assign _0188_ = ~(_0187_ ^ accumulator[7]);
  assign _0189_ = ~(_0135_ & accumulator[6]);
  assign _0190_ = _0137_ & ~(_0144_);
  assign _0191_ = _0190_ | ~(_0189_);
  assign _0192_ = _0191_ ^ _0188_;
  assign mac_result[7] = _0606_ & ~(_0192_);
  assign _0193_ = ~(weight_in[1] & data_in[7]);
  assign _0194_ = weight_in[2] & data_in[6];
  assign _0195_ = _0194_ ^ _0193_;
  assign _0196_ = _0147_ | _0146_;
  assign _0197_ = _0148_ & ~(_0149_);
  assign _0198_ = _0196_ & ~(_0197_);
  assign _0199_ = _0198_ ^ _0195_;
  assign _0200_ = weight_in[3] & data_in[5];
  assign _0201_ = weight_in[4] & data_in[4];
  assign _0202_ = _0201_ ^ _0200_;
  assign _0203_ = ~(weight_in[5] & data_in[3]);
  assign _0204_ = _0203_ ^ _0202_;
  assign _0205_ = _0204_ ^ _0199_;
  assign _0206_ = _0153_ | _0150_;
  assign _0207_ = _0154_ & ~(_0159_);
  assign _0208_ = _0206_ & ~(_0207_);
  assign _0209_ = _0208_ ^ _0205_;
  assign _0210_ = ~(_0156_ & _0155_);
  assign _0211_ = _0157_ & ~(_0158_);
  assign _0212_ = _0210_ & ~(_0211_);
  assign _0213_ = weight_in[6] & data_in[2];
  assign _0214_ = _0213_ ^ _0212_;
  assign _0215_ = weight_in[7] & data_in[1];
  assign _0216_ = _0215_ ^ _0214_;
  assign _0217_ = _0216_ ^ _0209_;
  assign _0218_ = _0163_ | _0160_;
  assign _0219_ = _0164_ & ~(_0173_);
  assign _0220_ = _0218_ & ~(_0219_);
  assign _0221_ = _0220_ ^ _0217_;
  assign _0222_ = _0169_ | _0167_;
  assign _0223_ = _0170_ & ~(_0172_);
  assign _0224_ = _0222_ & ~(_0223_);
  assign _0225_ = _0224_ ^ _0221_;
  assign _0226_ = _0177_ | _0174_;
  assign _0227_ = _0179_ & _0178_;
  assign _0228_ = _0226_ & ~(_0227_);
  assign _0229_ = ~(_0228_ ^ _0225_);
  assign _0230_ = ~_0229_;
  assign _0231_ = ~(_0181_ & _0180_);
  assign _0232_ = _0182_ & ~(_0183_);
  assign _0233_ = _0231_ & ~(_0232_);
  assign _0234_ = _0132_ | ~(_0182_);
  assign _0235_ = _0133_ & ~(_0234_);
  assign _0236_ = _0233_ & ~(_0235_);
  assign _0237_ = _0236_ ^ _0230_;
  assign _0238_ = ~(_0237_ | _0609_);
  assign _0239_ = ~(_0238_ ^ accumulator[8]);
  assign _0240_ = ~_0239_;
  assign _0241_ = _0187_ & accumulator[7];
  assign _0242_ = ~(_0189_ | _0188_);
  assign _0243_ = _0242_ | _0241_;
  assign _0244_ = _0188_ | _0136_;
  assign _0245_ = ~(_0244_ | _0140_);
  assign _0246_ = _0245_ | _0243_;
  assign _0247_ = _0244_ | _0142_;
  assign _0248_ = _0141_ & ~(_0247_);
  assign _0249_ = _0248_ | _0246_;
  assign _0250_ = ~(_0249_ ^ _0240_);
  assign mac_result[8] = _0606_ & ~(_0250_);
  assign _0251_ = weight_in[2] & data_in[7];
  assign _0252_ = _0194_ & ~(_0193_);
  assign _0253_ = _0252_ ^ _0251_;
  assign _0254_ = weight_in[3] & data_in[6];
  assign _0255_ = weight_in[4] & data_in[5];
  assign _0256_ = _0255_ ^ _0254_;
  assign _0257_ = weight_in[5] & data_in[4];
  assign _0258_ = ~_0257_;
  assign _0259_ = _0258_ ^ _0256_;
  assign _0260_ = _0259_ ^ _0253_;
  assign _0261_ = _0198_ | _0195_;
  assign _0262_ = _0199_ & ~(_0204_);
  assign _0263_ = _0261_ & ~(_0262_);
  assign _0264_ = _0263_ ^ _0260_;
  assign _0265_ = ~(_0201_ & _0200_);
  assign _0266_ = _0202_ & ~(_0203_);
  assign _0267_ = _0265_ & ~(_0266_);
  assign _0268_ = weight_in[6] & data_in[3];
  assign _0269_ = _0268_ ^ _0267_;
  assign _0270_ = weight_in[7] & data_in[2];
  assign _0271_ = _0270_ ^ _0269_;
  assign _0272_ = _0271_ ^ _0264_;
  assign _0273_ = _0208_ | _0205_;
  assign _0274_ = _0209_ & ~(_0216_);
  assign _0275_ = _0273_ & ~(_0274_);
  assign _0276_ = _0275_ ^ _0272_;
  assign _0277_ = _0212_ | ~(_0213_);
  assign _0278_ = _0215_ & ~(_0214_);
  assign _0279_ = _0277_ & ~(_0278_);
  assign _0280_ = _0279_ ^ _0276_;
  assign _0281_ = _0220_ | _0217_;
  assign _0282_ = _0221_ & ~(_0224_);
  assign _0283_ = _0281_ & ~(_0282_);
  assign _0284_ = _0283_ ^ _0280_;
  assign _0285_ = _0228_ | _0225_;
  assign _0286_ = _0230_ & ~(_0236_);
  assign _0287_ = _0285_ & ~(_0286_);
  assign _0288_ = _0287_ ^ _0284_;
  assign _0289_ = ~(_0288_ | _0609_);
  assign _0290_ = _0289_ ^ accumulator[9];
  assign _0291_ = ~(_0238_ & accumulator[8]);
  assign _0292_ = _0249_ & _0240_;
  assign _0293_ = _0291_ & ~(_0292_);
  assign _0294_ = _0293_ ^ _0290_;
  assign mac_result[9] = _0606_ & ~(_0294_);
  assign _0295_ = weight_in[3] & data_in[7];
  assign _0296_ = weight_in[4] & data_in[6];
  assign _0297_ = ~(_0296_ ^ _0295_);
  assign _0298_ = weight_in[5] & data_in[5];
  assign _0299_ = _0298_ ^ _0297_;
  assign _0300_ = ~(_0252_ & _0251_);
  assign _0301_ = _0253_ & ~(_0259_);
  assign _0302_ = _0300_ & ~(_0301_);
  assign _0303_ = _0302_ ^ _0299_;
  assign _0304_ = _0255_ & _0254_;
  assign _0305_ = _0256_ & ~(_0258_);
  assign _0306_ = ~(_0305_ | _0304_);
  assign _0307_ = weight_in[6] & data_in[4];
  assign _0308_ = _0307_ ^ _0306_;
  assign _0309_ = weight_in[7] & data_in[3];
  assign _0310_ = _0309_ ^ _0308_;
  assign _0311_ = _0310_ ^ _0303_;
  assign _0312_ = _0263_ | _0260_;
  assign _0313_ = _0264_ & ~(_0271_);
  assign _0314_ = _0312_ & ~(_0313_);
  assign _0315_ = _0314_ ^ _0311_;
  assign _0316_ = _0267_ | ~(_0268_);
  assign _0317_ = _0270_ & ~(_0269_);
  assign _0318_ = _0316_ & ~(_0317_);
  assign _0319_ = _0318_ ^ _0315_;
  assign _0320_ = _0275_ | _0272_;
  assign _0321_ = _0276_ & ~(_0279_);
  assign _0322_ = _0320_ & ~(_0321_);
  assign _0323_ = ~(_0322_ ^ _0319_);
  assign _0324_ = ~_0323_;
  assign _0325_ = _0283_ | _0280_;
  assign _0326_ = _0284_ & ~(_0285_);
  assign _0327_ = _0326_ | ~(_0325_);
  assign _0328_ = _0229_ | ~(_0284_);
  assign _0329_ = _0328_ | _0236_;
  assign _0330_ = _0329_ & ~(_0327_);
  assign _0331_ = _0330_ ^ _0324_;
  assign _0332_ = ~(_0331_ | _0609_);
  assign _0333_ = ~(_0332_ ^ accumulator[10]);
  assign _0334_ = ~_0333_;
  assign _0335_ = _0289_ & accumulator[9];
  assign _0336_ = _0290_ & ~(_0291_);
  assign _0337_ = _0336_ | _0335_;
  assign _0338_ = ~(_0290_ & _0240_);
  assign _0339_ = _0338_ | ~(_0249_);
  assign _0340_ = _0339_ & ~(_0337_);
  assign _0341_ = _0340_ ^ _0334_;
  assign mac_result[10] = _0606_ & ~(_0341_);
  assign _0342_ = weight_in[4] & data_in[7];
  assign _0343_ = weight_in[5] & data_in[6];
  assign _0344_ = ~(_0343_ ^ _0342_);
  assign _0345_ = ~_0344_;
  assign _0346_ = _0296_ & _0295_;
  assign _0347_ = _0298_ & ~(_0297_);
  assign _0348_ = ~(_0347_ | _0346_);
  assign _0349_ = weight_in[6] & data_in[5];
  assign _0350_ = _0349_ ^ _0348_;
  assign _0351_ = weight_in[7] & data_in[4];
  assign _0352_ = _0351_ ^ _0350_;
  assign _0353_ = _0352_ ^ _0345_;
  assign _0354_ = _0302_ | _0299_;
  assign _0355_ = _0303_ & ~(_0310_);
  assign _0356_ = _0354_ & ~(_0355_);
  assign _0357_ = _0356_ ^ _0353_;
  assign _0358_ = _0306_ | ~(_0307_);
  assign _0359_ = _0309_ & ~(_0308_);
  assign _0360_ = _0358_ & ~(_0359_);
  assign _0361_ = _0360_ ^ _0357_;
  assign _0362_ = _0314_ | _0311_;
  assign _0363_ = _0315_ & ~(_0318_);
  assign _0364_ = _0362_ & ~(_0363_);
  assign _0365_ = _0364_ ^ _0361_;
  assign _0366_ = _0322_ | _0319_;
  assign _0367_ = _0324_ & ~(_0330_);
  assign _0368_ = _0366_ & ~(_0367_);
  assign _0369_ = _0368_ ^ _0365_;
  assign _0370_ = ~(_0369_ | _0609_);
  assign _0371_ = _0370_ ^ accumulator[11];
  assign _0372_ = ~(_0332_ & accumulator[10]);
  assign _0373_ = _0334_ & ~(_0340_);
  assign _0374_ = _0372_ & ~(_0373_);
  assign _0375_ = _0374_ ^ _0371_;
  assign mac_result[11] = _0606_ & ~(_0375_);
  assign _0376_ = weight_in[5] & data_in[7];
  assign _0377_ = _0343_ & _0342_;
  assign _0378_ = weight_in[6] & data_in[6];
  assign _0379_ = ~(_0378_ ^ _0377_);
  assign _0380_ = weight_in[7] & data_in[5];
  assign _0381_ = _0380_ ^ _0379_;
  assign _0382_ = _0381_ ^ _0376_;
  assign _0383_ = _0345_ & ~(_0352_);
  assign _0384_ = _0383_ ^ _0382_;
  assign _0385_ = _0348_ | ~(_0349_);
  assign _0386_ = _0351_ & ~(_0350_);
  assign _0387_ = _0385_ & ~(_0386_);
  assign _0388_ = ~(_0387_ ^ _0384_);
  assign _0389_ = _0356_ | _0353_;
  assign _0390_ = _0357_ & ~(_0360_);
  assign _0391_ = _0389_ & ~(_0390_);
  assign _0392_ = ~(_0391_ ^ _0388_);
  assign _0393_ = ~_0392_;
  assign _0394_ = _0364_ | _0361_;
  assign _0395_ = _0365_ & ~(_0366_);
  assign _0396_ = _0394_ & ~(_0395_);
  assign _0397_ = _0323_ | ~(_0365_);
  assign _0398_ = _0327_ & ~(_0397_);
  assign _0399_ = _0396_ & ~(_0398_);
  assign _0400_ = ~(_0397_ | _0328_);
  assign _0401_ = _0400_ & ~(_0236_);
  assign _0402_ = _0399_ & ~(_0401_);
  assign _0403_ = _0402_ ^ _0393_;
  assign _0404_ = ~(_0403_ | _0609_);
  assign _0405_ = ~(_0404_ ^ accumulator[12]);
  assign _0406_ = ~_0405_;
  assign _0407_ = _0370_ & accumulator[11];
  assign _0408_ = _0371_ & ~(_0372_);
  assign _0409_ = _0408_ | _0407_;
  assign _0410_ = ~(_0371_ & _0334_);
  assign _0411_ = _0337_ & ~(_0410_);
  assign _0412_ = _0411_ | _0409_;
  assign _0413_ = _0410_ | _0338_;
  assign _0414_ = _0249_ & ~(_0413_);
  assign _0415_ = ~(_0414_ | _0412_);
  assign _0416_ = _0415_ ^ _0406_;
  assign mac_result[12] = _0606_ & ~(_0416_);
  assign _0417_ = weight_in[6] & data_in[7];
  assign _0418_ = weight_in[7] & data_in[6];
  assign _0419_ = ~(_0418_ ^ _0417_);
  assign _0420_ = _0376_ & ~(_0381_);
  assign _0421_ = _0420_ ^ _0419_;
  assign _0422_ = ~(_0378_ & _0377_);
  assign _0423_ = _0380_ & ~(_0379_);
  assign _0424_ = _0422_ & ~(_0423_);
  assign _0425_ = ~(_0424_ ^ _0421_);
  assign _0426_ = _0382_ | ~(_0383_);
  assign _0427_ = ~(_0387_ | _0384_);
  assign _0428_ = _0426_ & ~(_0427_);
  assign _0429_ = ~(_0428_ ^ _0425_);
  assign _0430_ = ~_0429_;
  assign _0431_ = _0391_ | _0388_;
  assign _0432_ = _0393_ & ~(_0402_);
  assign _0433_ = _0431_ & ~(_0432_);
  assign _0434_ = _0433_ ^ _0430_;
  assign _0435_ = ~(_0434_ | _0609_);
  assign _0436_ = _0435_ ^ accumulator[13];
  assign _0437_ = ~(_0404_ & accumulator[12]);
  assign _0438_ = _0406_ & ~(_0415_);
  assign _0439_ = _0437_ & ~(_0438_);
  assign _0440_ = _0439_ ^ _0436_;
  assign mac_result[13] = _0606_ & ~(_0440_);
  assign _0441_ = weight_in[7] & data_in[7];
  assign _0442_ = _0418_ & _0417_;
  assign _0443_ = ~(_0442_ ^ _0441_);
  assign _0444_ = _0419_ | ~(_0420_);
  assign _0445_ = ~(_0424_ | _0421_);
  assign _0446_ = _0444_ & ~(_0445_);
  assign _0447_ = _0446_ ^ _0443_;
  assign _0448_ = _0428_ | _0425_;
  assign _0449_ = _0430_ & ~(_0431_);
  assign _0450_ = _0448_ & ~(_0449_);
  assign _0451_ = _0429_ | _0392_;
  assign _0452_ = ~(_0451_ | _0402_);
  assign _0453_ = _0450_ & ~(_0452_);
  assign _0454_ = _0453_ ^ _0447_;
  assign _0455_ = ~(_0454_ | _0609_);
  assign _0456_ = ~(_0455_ ^ accumulator[14]);
  assign _0457_ = ~_0456_;
  assign _0458_ = _0435_ & accumulator[13];
  assign _0459_ = _0436_ & ~(_0437_);
  assign _0460_ = _0459_ | _0458_;
  assign _0461_ = ~(_0436_ & _0406_);
  assign _0462_ = _0461_ | _0415_;
  assign _0463_ = _0462_ & ~(_0460_);
  assign _0464_ = _0463_ ^ _0457_;
  assign mac_result[14] = _0606_ & ~(_0464_);
  assign _0465_ = _0442_ & _0441_;
  assign _0466_ = _0446_ | _0443_;
  assign _0467_ = _0447_ & ~(_0453_);
  assign _0468_ = _0466_ & ~(_0467_);
  assign _0469_ = _0468_ ^ _0465_;
  assign _0470_ = ~(_0469_ | _0609_);
  assign _0471_ = _0470_ ^ accumulator[15];
  assign _0472_ = ~(_0455_ & accumulator[14]);
  assign _0473_ = _0457_ & ~(_0463_);
  assign _0474_ = _0472_ & ~(_0473_);
  assign _0475_ = _0474_ ^ _0471_;
  assign mac_result[15] = _0606_ & ~(_0475_);
  assign _0476_ = ~(_0470_ ^ accumulator[16]);
  assign _0477_ = ~_0476_;
  assign _0478_ = _0470_ & accumulator[15];
  assign _0479_ = _0471_ & ~(_0472_);
  assign _0480_ = _0479_ | _0478_;
  assign _0481_ = ~(_0471_ & _0457_);
  assign _0482_ = _0460_ & ~(_0481_);
  assign _0483_ = _0482_ | _0480_;
  assign _0484_ = _0481_ | _0461_;
  assign _0485_ = _0412_ & ~(_0484_);
  assign _0486_ = _0485_ | _0483_;
  assign _0487_ = _0484_ | _0413_;
  assign _0488_ = _0249_ & ~(_0487_);
  assign _0489_ = _0488_ | _0486_;
  assign _0490_ = ~(_0489_ ^ _0477_);
  assign mac_result[16] = _0606_ & ~(_0490_);
  assign _0491_ = _0470_ ^ accumulator[17];
  assign _0492_ = ~(_0470_ & accumulator[16]);
  assign _0493_ = _0489_ & _0477_;
  assign _0494_ = _0492_ & ~(_0493_);
  assign _0495_ = _0494_ ^ _0491_;
  assign mac_result[17] = _0606_ & ~(_0495_);
  assign _0496_ = ~(_0470_ ^ accumulator[18]);
  assign _0497_ = ~_0496_;
  assign _0498_ = _0470_ & accumulator[17];
  assign _0499_ = _0491_ & ~(_0492_);
  assign _0500_ = _0499_ | _0498_;
  assign _0501_ = _0476_ | ~(_0491_);
  assign _0502_ = _0501_ | ~(_0489_);
  assign _0503_ = _0502_ & ~(_0500_);
  assign _0504_ = _0503_ ^ _0497_;
  assign mac_result[18] = _0606_ & ~(_0504_);
  assign _0505_ = _0470_ ^ accumulator[19];
  assign _0506_ = ~(_0470_ & accumulator[18]);
  assign _0507_ = _0497_ & ~(_0503_);
  assign _0508_ = _0506_ & ~(_0507_);
  assign _0509_ = _0508_ ^ _0505_;
  assign mac_result[19] = _0606_ & ~(_0509_);
  assign _0510_ = ~(_0470_ ^ accumulator[20]);
  assign _0511_ = ~_0510_;
  assign _0512_ = _0470_ & accumulator[19];
  assign _0513_ = _0505_ & ~(_0506_);
  assign _0514_ = _0513_ | _0512_;
  assign _0515_ = _0496_ | ~(_0505_);
  assign _0516_ = _0500_ & ~(_0515_);
  assign _0517_ = _0516_ | _0514_;
  assign _0518_ = _0515_ | _0501_;
  assign _0519_ = _0489_ & ~(_0518_);
  assign _0520_ = ~(_0519_ | _0517_);
  assign _0521_ = _0520_ ^ _0511_;
  assign mac_result[20] = _0606_ & ~(_0521_);
  assign _0522_ = _0470_ ^ accumulator[21];
  assign _0523_ = ~(_0470_ & accumulator[20]);
  assign _0524_ = _0511_ & ~(_0520_);
  assign _0525_ = _0523_ & ~(_0524_);
  assign _0526_ = _0525_ ^ _0522_;
  assign mac_result[21] = _0606_ & ~(_0526_);
  assign _0527_ = ~(_0470_ ^ accumulator[22]);
  assign _0528_ = ~_0527_;
  assign _0529_ = _0470_ & accumulator[21];
  assign _0530_ = _0522_ & ~(_0523_);
  assign _0531_ = _0530_ | _0529_;
  assign _0532_ = _0510_ | ~(_0522_);
  assign _0533_ = _0532_ | _0520_;
  assign _0534_ = _0533_ & ~(_0531_);
  assign _0535_ = _0534_ ^ _0528_;
  assign mac_result[22] = _0606_ & ~(_0535_);
  assign _0536_ = _0470_ ^ accumulator[23];
  assign _0537_ = ~(_0470_ & accumulator[22]);
  assign _0538_ = _0528_ & ~(_0534_);
  assign _0539_ = _0537_ & ~(_0538_);
  assign _0540_ = _0539_ ^ _0536_;
  assign mac_result[23] = _0606_ & ~(_0540_);
  assign _0541_ = ~(_0470_ ^ accumulator[24]);
  assign _0542_ = ~_0541_;
  assign _0543_ = _0470_ & accumulator[23];
  assign _0544_ = _0536_ & ~(_0537_);
  assign _0545_ = _0544_ | _0543_;
  assign _0546_ = _0527_ | ~(_0536_);
  assign _0547_ = _0531_ & ~(_0546_);
  assign _0548_ = _0547_ | _0545_;
  assign _0549_ = _0546_ | _0532_;
  assign _0550_ = _0517_ & ~(_0549_);
  assign _0551_ = ~(_0550_ | _0548_);
  assign _0552_ = _0549_ | _0518_;
  assign _0553_ = _0489_ & ~(_0552_);
  assign _0554_ = _0551_ & ~(_0553_);
  assign _0555_ = _0554_ ^ _0542_;
  assign mac_result[24] = _0606_ & ~(_0555_);
  assign _0556_ = _0470_ ^ accumulator[25];
  assign _0557_ = ~(_0470_ & accumulator[24]);
  assign _0558_ = _0542_ & ~(_0554_);
  assign _0559_ = _0557_ & ~(_0558_);
  assign _0560_ = _0559_ ^ _0556_;
  assign mac_result[25] = _0606_ & ~(_0560_);
  assign _0561_ = ~(_0470_ ^ accumulator[26]);
  assign _0562_ = ~_0561_;
  assign _0563_ = _0470_ & accumulator[25];
  assign _0564_ = _0556_ & ~(_0557_);
  assign _0565_ = _0564_ | _0563_;
  assign _0566_ = _0541_ | ~(_0556_);
  assign _0567_ = _0566_ | _0554_;
  assign _0568_ = _0567_ & ~(_0565_);
  assign _0569_ = _0568_ ^ _0562_;
  assign mac_result[26] = _0606_ & ~(_0569_);
  assign _0570_ = ~(_0470_ ^ accumulator[27]);
  assign _0571_ = ~(_0470_ & accumulator[26]);
  assign _0572_ = _0562_ & ~(_0568_);
  assign _0573_ = _0572_ | ~(_0571_);
  assign _0574_ = _0573_ ^ _0570_;
  assign mac_result[27] = _0606_ & ~(_0574_);
  assign _0575_ = ~(_0470_ ^ accumulator[28]);
  assign _0576_ = ~_0575_;
  assign _0577_ = ~(_0470_ & accumulator[27]);
  assign _0578_ = ~(_0571_ | _0570_);
  assign _0579_ = _0577_ & ~(_0578_);
  assign _0580_ = _0570_ | _0561_;
  assign _0581_ = _0565_ & ~(_0580_);
  assign _0582_ = _0579_ & ~(_0581_);
  assign _0583_ = ~(_0580_ | _0566_);
  assign _0584_ = _0583_ & ~(_0554_);
  assign _0585_ = _0582_ & ~(_0584_);
  assign _0586_ = _0585_ ^ _0576_;
  assign mac_result[28] = _0606_ & ~(_0586_);
  assign _0587_ = ~(_0470_ ^ accumulator[29]);
  assign _0588_ = ~(_0470_ & accumulator[28]);
  assign _0589_ = _0576_ & ~(_0585_);
  assign _0590_ = _0589_ | ~(_0588_);
  assign _0591_ = _0590_ ^ _0587_;
  assign mac_result[29] = _0606_ & ~(_0591_);
  assign _0592_ = _0470_ ^ accumulator[30];
  assign _0593_ = ~(_0470_ & accumulator[29]);
  assign _0594_ = ~(_0588_ | _0587_);
  assign _0595_ = _0593_ & ~(_0594_);
  assign _0596_ = _0587_ | _0575_;
  assign _0597_ = ~(_0596_ | _0585_);
  assign _0598_ = _0595_ & ~(_0597_);
  assign _0599_ = _0598_ ^ _0592_;
  assign mac_result[30] = _0606_ & ~(_0599_);
  assign _0600_ = _0470_ ^ accumulator[31];
  assign _0601_ = ~(_0470_ & accumulator[30]);
  assign _0602_ = _0592_ & ~(_0598_);
  assign _0603_ = _0601_ & ~(_0602_);
  assign _0604_ = _0603_ ^ _0600_;
  assign mac_result[31] = _0606_ & ~(_0604_);
  (* src = "../../rtl/pe/neuraedge_pe.v:41.3-43.43" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) accumulator[0] <= 1'h0;
    else if (_0000_) accumulator[0] <= mac_result[0];
  (* src = "../../rtl/pe/neuraedge_pe.v:41.3-43.43" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) accumulator[1] <= 1'h0;
    else if (_0000_) accumulator[1] <= mac_result[1];
  (* src = "../../rtl/pe/neuraedge_pe.v:41.3-43.43" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) accumulator[2] <= 1'h0;
    else if (_0000_) accumulator[2] <= mac_result[2];
  (* src = "../../rtl/pe/neuraedge_pe.v:41.3-43.43" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) accumulator[3] <= 1'h0;
    else if (_0000_) accumulator[3] <= mac_result[3];
  (* src = "../../rtl/pe/neuraedge_pe.v:41.3-43.43" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) accumulator[4] <= 1'h0;
    else if (_0000_) accumulator[4] <= mac_result[4];
  (* src = "../../rtl/pe/neuraedge_pe.v:41.3-43.43" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) accumulator[5] <= 1'h0;
    else if (_0000_) accumulator[5] <= mac_result[5];
  (* src = "../../rtl/pe/neuraedge_pe.v:41.3-43.43" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) accumulator[6] <= 1'h0;
    else if (_0000_) accumulator[6] <= mac_result[6];
  (* src = "../../rtl/pe/neuraedge_pe.v:41.3-43.43" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) accumulator[7] <= 1'h0;
    else if (_0000_) accumulator[7] <= mac_result[7];
  (* src = "../../rtl/pe/neuraedge_pe.v:41.3-43.43" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) accumulator[8] <= 1'h0;
    else if (_0000_) accumulator[8] <= mac_result[8];
  (* src = "../../rtl/pe/neuraedge_pe.v:41.3-43.43" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) accumulator[9] <= 1'h0;
    else if (_0000_) accumulator[9] <= mac_result[9];
  (* src = "../../rtl/pe/neuraedge_pe.v:41.3-43.43" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) accumulator[10] <= 1'h0;
    else if (_0000_) accumulator[10] <= mac_result[10];
  (* src = "../../rtl/pe/neuraedge_pe.v:41.3-43.43" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) accumulator[11] <= 1'h0;
    else if (_0000_) accumulator[11] <= mac_result[11];
  (* src = "../../rtl/pe/neuraedge_pe.v:41.3-43.43" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) accumulator[12] <= 1'h0;
    else if (_0000_) accumulator[12] <= mac_result[12];
  (* src = "../../rtl/pe/neuraedge_pe.v:41.3-43.43" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) accumulator[13] <= 1'h0;
    else if (_0000_) accumulator[13] <= mac_result[13];
  (* src = "../../rtl/pe/neuraedge_pe.v:41.3-43.43" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) accumulator[14] <= 1'h0;
    else if (_0000_) accumulator[14] <= mac_result[14];
  (* src = "../../rtl/pe/neuraedge_pe.v:41.3-43.43" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) accumulator[15] <= 1'h0;
    else if (_0000_) accumulator[15] <= mac_result[15];
  (* src = "../../rtl/pe/neuraedge_pe.v:41.3-43.43" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) accumulator[16] <= 1'h0;
    else if (_0000_) accumulator[16] <= mac_result[16];
  (* src = "../../rtl/pe/neuraedge_pe.v:41.3-43.43" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) accumulator[17] <= 1'h0;
    else if (_0000_) accumulator[17] <= mac_result[17];
  (* src = "../../rtl/pe/neuraedge_pe.v:41.3-43.43" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) accumulator[18] <= 1'h0;
    else if (_0000_) accumulator[18] <= mac_result[18];
  (* src = "../../rtl/pe/neuraedge_pe.v:41.3-43.43" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) accumulator[19] <= 1'h0;
    else if (_0000_) accumulator[19] <= mac_result[19];
  (* src = "../../rtl/pe/neuraedge_pe.v:41.3-43.43" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) accumulator[20] <= 1'h0;
    else if (_0000_) accumulator[20] <= mac_result[20];
  (* src = "../../rtl/pe/neuraedge_pe.v:41.3-43.43" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) accumulator[21] <= 1'h0;
    else if (_0000_) accumulator[21] <= mac_result[21];
  (* src = "../../rtl/pe/neuraedge_pe.v:41.3-43.43" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) accumulator[22] <= 1'h0;
    else if (_0000_) accumulator[22] <= mac_result[22];
  (* src = "../../rtl/pe/neuraedge_pe.v:41.3-43.43" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) accumulator[23] <= 1'h0;
    else if (_0000_) accumulator[23] <= mac_result[23];
  (* src = "../../rtl/pe/neuraedge_pe.v:41.3-43.43" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) accumulator[24] <= 1'h0;
    else if (_0000_) accumulator[24] <= mac_result[24];
  (* src = "../../rtl/pe/neuraedge_pe.v:41.3-43.43" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) accumulator[25] <= 1'h0;
    else if (_0000_) accumulator[25] <= mac_result[25];
  (* src = "../../rtl/pe/neuraedge_pe.v:41.3-43.43" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) accumulator[26] <= 1'h0;
    else if (_0000_) accumulator[26] <= mac_result[26];
  (* src = "../../rtl/pe/neuraedge_pe.v:41.3-43.43" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) accumulator[27] <= 1'h0;
    else if (_0000_) accumulator[27] <= mac_result[27];
  (* src = "../../rtl/pe/neuraedge_pe.v:41.3-43.43" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) accumulator[28] <= 1'h0;
    else if (_0000_) accumulator[28] <= mac_result[28];
  (* src = "../../rtl/pe/neuraedge_pe.v:41.3-43.43" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) accumulator[29] <= 1'h0;
    else if (_0000_) accumulator[29] <= mac_result[29];
  (* src = "../../rtl/pe/neuraedge_pe.v:41.3-43.43" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) accumulator[30] <= 1'h0;
    else if (_0000_) accumulator[30] <= mac_result[30];
  (* src = "../../rtl/pe/neuraedge_pe.v:41.3-43.43" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) accumulator[31] <= 1'h0;
    else if (_0000_) accumulator[31] <= mac_result[31];
  assign accum_out = accumulator;
  assign accum_valid = data_valid;
  assign data_out = data_in;
  assign data_valid_out = data_valid;
  assign weight_out = weight_in;
endmodule
